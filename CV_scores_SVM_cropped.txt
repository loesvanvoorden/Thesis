Scores for Cropped_1
SVM with C = 1:
{'test_score': array([0.58823529, 0.64705882, 0.55882353, 0.67647059, 0.67647059,
       0.5       , 0.54545455, 0.6969697 , 0.72727273, 0.57575758]), 'train_score': array([0.87748344, 0.88410596, 0.88410596, 0.85099338, 0.84437086,
       0.88410596, 0.8679868 , 0.89108911, 0.8679868 , 0.87458746])}
SVM with C = 50:
{'test_score': array([0.58823529, 0.55882353, 0.52941176, 0.61764706, 0.73529412,
       0.61764706, 0.63636364, 0.57575758, 0.60606061, 0.51515152]), 'train_score': array([0.99337748, 0.99668874, 0.99337748, 0.99668874, 0.99668874,
       0.99337748, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.55882353, 0.58823529, 0.52941176, 0.58823529, 0.73529412,
       0.58823529, 0.60606061, 0.63636364, 0.60606061, 0.54545455]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_2
SVM with C = 1:
{'test_score': array([0.55882353, 0.55882353, 0.44117647, 0.47058824, 0.55882353,
       0.55882353, 0.57575758, 0.48484848, 0.51515152, 0.54545455]), 'train_score': array([0.70198675, 0.7384106 , 0.77483444, 0.73509934, 0.7384106 ,
       0.75827815, 0.73927393, 0.75577558, 0.76237624, 0.74587459])}
SVM with C = 50:
{'test_score': array([0.55882353, 0.5       , 0.38235294, 0.47058824, 0.58823529,
       0.35294118, 0.60606061, 0.48484848, 0.60606061, 0.33333333]), 'train_score': array([0.99668874, 1.        , 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.55882353, 0.5       , 0.38235294, 0.47058824, 0.58823529,
       0.38235294, 0.60606061, 0.45454545, 0.63636364, 0.33333333]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_3
SVM with C = 1:
{'test_score': array([0.55882353, 0.52941176, 0.52941176, 0.55882353, 0.58823529,
       0.52941176, 0.60606061, 0.60606061, 0.60606061, 0.48484848]), 'train_score': array([0.81788079, 0.79801325, 0.81456954, 0.79801325, 0.81456954,
       0.79801325, 0.78217822, 0.80858086, 0.80858086, 0.79867987])}
SVM with C = 50:
{'test_score': array([0.44117647, 0.55882353, 0.5       , 0.5       , 0.58823529,
       0.52941176, 0.6969697 , 0.48484848, 0.60606061, 0.45454545]), 'train_score': array([0.99337748, 0.99337748, 0.99337748, 0.99337748, 1.        ,
       0.99337748, 0.99669967, 0.99339934, 0.99669967, 0.99339934])}
SVM with C = 100:
{'test_score': array([0.52941176, 0.58823529, 0.47058824, 0.44117647, 0.52941176,
       0.52941176, 0.72727273, 0.51515152, 0.60606061, 0.51515152]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_4
SVM with C = 1:
{'test_score': array([0.55882353, 0.52941176, 0.47058824, 0.5       , 0.55882353,
       0.55882353, 0.45454545, 0.57575758, 0.45454545, 0.60606061]), 'train_score': array([0.70529801, 0.73509934, 0.7615894 , 0.73178808, 0.7218543 ,
       0.7384106 , 0.75907591, 0.72607261, 0.75577558, 0.74257426])}
SVM with C = 50:
{'test_score': array([0.52941176, 0.55882353, 0.44117647, 0.64705882, 0.55882353,
       0.5       , 0.39393939, 0.57575758, 0.33333333, 0.48484848]), 'train_score': array([0.99337748, 0.99337748, 1.        , 0.99668874, 0.99337748,
       0.99337748, 0.99339934, 0.99669967, 0.99339934, 0.99339934])}
SVM with C = 100:
{'test_score': array([0.47058824, 0.55882353, 0.5       , 0.61764706, 0.55882353,
       0.55882353, 0.39393939, 0.57575758, 0.36363636, 0.48484848]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_5
SVM with C = 1:
{'test_score': array([0.55882353, 0.52941176, 0.52941176, 0.55882353, 0.55882353,
       0.55882353, 0.57575758, 0.57575758, 0.57575758, 0.54545455]), 'train_score': array([0.8013245 , 0.79801325, 0.76821192, 0.78476821, 0.79139073,
       0.78476821, 0.79537954, 0.77557756, 0.79867987, 0.79537954])}
SVM with C = 50:
{'test_score': array([0.47058824, 0.52941176, 0.61764706, 0.5       , 0.47058824,
       0.44117647, 0.51515152, 0.63636364, 0.63636364, 0.63636364]), 'train_score': array([1.        , 0.99668874, 0.99668874, 1.        , 0.99668874,
       1.        , 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.5       , 0.55882353, 0.67647059, 0.47058824, 0.5       ,
       0.5       , 0.48484848, 0.54545455, 0.57575758, 0.60606061]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_6
SVM with C = 1:
{'test_score': array([0.55882353, 0.47058824, 0.5       , 0.55882353, 0.58823529,
       0.58823529, 0.54545455, 0.60606061, 0.51515152, 0.57575758]), 'train_score': array([0.77483444, 0.79801325, 0.79801325, 0.77152318, 0.76821192,
       0.80794702, 0.79537954, 0.77557756, 0.80858086, 0.78877888])}
SVM with C = 50:
{'test_score': array([0.61764706, 0.55882353, 0.55882353, 0.5       , 0.64705882,
       0.64705882, 0.54545455, 0.63636364, 0.54545455, 0.60606061]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}
SVM with C = 100:
{'test_score': array([0.58823529, 0.55882353, 0.55882353, 0.5       , 0.64705882,
       0.64705882, 0.57575758, 0.60606061, 0.57575758, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_7
SVM with C = 1:
{'test_score': array([0.61764706, 0.5       , 0.52941176, 0.52941176, 0.58823529,
       0.58823529, 0.51515152, 0.63636364, 0.57575758, 0.51515152]), 'train_score': array([0.7384106 , 0.77152318, 0.75165563, 0.71523179, 0.7384106 ,
       0.75165563, 0.7689769 , 0.78547855, 0.7029703 , 0.74917492])}
SVM with C = 50:
{'test_score': array([0.5       , 0.44117647, 0.38235294, 0.61764706, 0.67647059,
       0.52941176, 0.3030303 , 0.57575758, 0.45454545, 0.63636364]), 'train_score': array([0.99668874, 0.99668874, 1.        , 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.5       , 0.41176471, 0.38235294, 0.61764706, 0.58823529,
       0.52941176, 0.3030303 , 0.54545455, 0.48484848, 0.60606061]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_8
SVM with C = 1:
{'test_score': array([0.55882353, 0.58823529, 0.47058824, 0.52941176, 0.58823529,
       0.47058824, 0.57575758, 0.54545455, 0.57575758, 0.60606061]), 'train_score': array([0.7218543 , 0.72847682, 0.77483444, 0.77152318, 0.7615894 ,
       0.81788079, 0.75577558, 0.79207921, 0.76567657, 0.74257426])}
SVM with C = 50:
{'test_score': array([0.41176471, 0.52941176, 0.52941176, 0.52941176, 0.55882353,
       0.44117647, 0.51515152, 0.60606061, 0.57575758, 0.48484848]), 'train_score': array([0.99337748, 0.99337748, 0.99668874, 0.99337748, 0.99668874,
       0.99337748, 0.99669967, 0.99339934, 0.99339934, 0.99339934])}
SVM with C = 100:
{'test_score': array([0.44117647, 0.58823529, 0.5       , 0.5       , 0.55882353,
       0.38235294, 0.51515152, 0.66666667, 0.60606061, 0.48484848]), 'train_score': array([0.99668874, 0.99668874, 1.        , 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}

Cropped_1 has the best test score (0.6192513368983958) with C = 1 and standard error 0.0715556957170257
Scores for Cropped_1
SVM with C = 1:
{'test_score': array([0.52941176, 0.61764706, 0.58823529, 0.58823529, 0.61764706,
       0.52941176, 0.54545455, 0.66666667, 0.63636364, 0.66666667]), 'train_score': array([0.89403974, 0.86754967, 0.8410596 , 0.8807947 , 0.85761589,
       0.86092715, 0.87458746, 0.89108911, 0.87128713, 0.86468647])}
SVM with C = 50:
{'test_score': array([0.5       , 0.61764706, 0.70588235, 0.61764706, 0.64705882,
       0.52941176, 0.57575758, 0.60606061, 0.72727273, 0.63636364]), 'train_score': array([0.99337748, 0.99668874, 0.99337748, 0.99337748, 0.99337748,
       0.99668874, 0.99669967, 0.99339934, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.5       , 0.61764706, 0.70588235, 0.61764706, 0.64705882,
       0.5       , 0.54545455, 0.57575758, 0.72727273, 0.63636364]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_2
SVM with C = 1:
{'test_score': array([0.61764706, 0.58823529, 0.52941176, 0.55882353, 0.47058824,
       0.52941176, 0.57575758, 0.60606061, 0.57575758, 0.63636364]), 'train_score': array([0.75496689, 0.78807947, 0.78145695, 0.76490066, 0.75827815,
       0.78145695, 0.7689769 , 0.7689769 , 0.7689769 , 0.77557756])}
SVM with C = 50:
{'test_score': array([0.58823529, 0.5       , 0.52941176, 0.47058824, 0.47058824,
       0.52941176, 0.51515152, 0.51515152, 0.54545455, 0.51515152]), 'train_score': array([0.99337748, 0.99668874, 0.99337748, 0.99337748, 0.99337748,
       0.99668874, 0.99339934, 0.99669967, 0.99669967, 0.99339934])}
SVM with C = 100:
{'test_score': array([0.61764706, 0.55882353, 0.52941176, 0.44117647, 0.47058824,
       0.52941176, 0.51515152, 0.54545455, 0.60606061, 0.51515152]), 'train_score': array([1.        , 1.        , 1.        , 1.        , 1.        ,
       0.99668874, 1.        , 1.        , 1.        , 1.        ])}

Scores for Cropped_3
SVM with C = 1:
{'test_score': array([0.55882353, 0.58823529, 0.58823529, 0.5       , 0.58823529,
       0.55882353, 0.60606061, 0.57575758, 0.54545455, 0.57575758]), 'train_score': array([0.72516556, 0.78476821, 0.7384106 , 0.77483444, 0.7781457 ,
       0.75496689, 0.75907591, 0.76567657, 0.75247525, 0.77227723])}
SVM with C = 50:
{'test_score': array([0.52941176, 0.44117647, 0.47058824, 0.35294118, 0.44117647,
       0.44117647, 0.63636364, 0.45454545, 0.42424242, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}
SVM with C = 100:
{'test_score': array([0.52941176, 0.44117647, 0.47058824, 0.35294118, 0.44117647,
       0.44117647, 0.63636364, 0.45454545, 0.42424242, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_4
SVM with C = 1:
{'test_score': array([0.52941176, 0.52941176, 0.55882353, 0.5       , 0.52941176,
       0.55882353, 0.54545455, 0.57575758, 0.54545455, 0.60606061]), 'train_score': array([0.71523179, 0.68543046, 0.70529801, 0.73178808, 0.71854305,
       0.7218543 , 0.69636964, 0.75907591, 0.73267327, 0.73267327])}
SVM with C = 50:
{'test_score': array([0.58823529, 0.64705882, 0.58823529, 0.55882353, 0.5       ,
       0.58823529, 0.42424242, 0.45454545, 0.42424242, 0.42424242]), 'train_score': array([0.99668874, 0.99668874, 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 1.        , 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.64705882, 0.64705882, 0.64705882, 0.55882353, 0.5       ,
       0.61764706, 0.42424242, 0.45454545, 0.42424242, 0.42424242]), 'train_score': array([0.99668874, 0.99668874, 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 1.        , 0.99669967, 0.99669967, 0.99669967])}

Scores for Cropped_5
SVM with C = 1:
{'test_score': array([0.55882353, 0.52941176, 0.55882353, 0.55882353, 0.58823529,
       0.55882353, 0.57575758, 0.57575758, 0.57575758, 0.54545455]), 'train_score': array([0.78476821, 0.78807947, 0.80463576, 0.79139073, 0.82450331,
       0.73509934, 0.78877888, 0.78217822, 0.75907591, 0.77887789])}
SVM with C = 50:
{'test_score': array([0.47058824, 0.47058824, 0.47058824, 0.41176471, 0.52941176,
       0.55882353, 0.48484848, 0.39393939, 0.48484848, 0.48484848]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}
SVM with C = 100:
{'test_score': array([0.47058824, 0.47058824, 0.47058824, 0.41176471, 0.52941176,
       0.55882353, 0.48484848, 0.39393939, 0.48484848, 0.48484848]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_6
SVM with C = 1:
{'test_score': array([0.52941176, 0.5       , 0.55882353, 0.5       , 0.55882353,
       0.5       , 0.57575758, 0.54545455, 0.60606061, 0.45454545]), 'train_score': array([0.78807947, 0.82119205, 0.7615894 , 0.78476821, 0.77483444,
       0.79470199, 0.81188119, 0.79537954, 0.82508251, 0.79867987])}
SVM with C = 50:
{'test_score': array([0.52941176, 0.5       , 0.52941176, 0.44117647, 0.55882353,
       0.55882353, 0.45454545, 0.39393939, 0.63636364, 0.54545455]), 'train_score': array([0.99668874, 0.99668874, 0.99668874, 0.99668874, 0.99668874,
       1.        , 1.        , 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.55882353, 0.52941176, 0.52941176, 0.44117647, 0.55882353,
       0.55882353, 0.45454545, 0.39393939, 0.60606061, 0.51515152]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_7
SVM with C = 1:
{'test_score': array([0.58823529, 0.44117647, 0.44117647, 0.61764706, 0.55882353,
       0.61764706, 0.66666667, 0.66666667, 0.54545455, 0.54545455]), 'train_score': array([0.80463576, 0.83774834, 0.81456954, 0.83774834, 0.82450331,
       0.77152318, 0.83168317, 0.83828383, 0.81188119, 0.79207921])}
SVM with C = 50:
{'test_score': array([0.52941176, 0.5       , 0.52941176, 0.47058824, 0.5       ,
       0.58823529, 0.48484848, 0.48484848, 0.57575758, 0.57575758]), 'train_score': array([0.99668874, 1.        , 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.52941176, 0.5       , 0.52941176, 0.5       , 0.5       ,
       0.64705882, 0.48484848, 0.45454545, 0.57575758, 0.60606061]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_8
SVM with C = 1:
{'test_score': array([0.55882353, 0.61764706, 0.55882353, 0.5       , 0.55882353,
       0.5       , 0.45454545, 0.48484848, 0.57575758, 0.57575758]), 'train_score': array([0.78145695, 0.81456954, 0.79470199, 0.8410596 , 0.85430464,
       0.83443709, 0.85148515, 0.81188119, 0.80528053, 0.84818482])}
SVM with C = 50:
{'test_score': array([0.58823529, 0.58823529, 0.58823529, 0.29411765, 0.38235294,
       0.55882353, 0.57575758, 0.51515152, 0.72727273, 0.45454545]), 'train_score': array([1.        , 0.99668874, 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.58823529, 0.55882353, 0.58823529, 0.29411765, 0.38235294,
       0.55882353, 0.54545455, 0.51515152, 0.66666667, 0.45454545]), 'train_score': array([1.        , 0.99668874, 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}

Cropped_1 has the best test score (0.6163101604278076) with C = 50 and standard deviation 0.06672032356988407
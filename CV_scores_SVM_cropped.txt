Scores for Cropped_1
SVM with C = 1:
{'test_score': array([0.55263158, 0.65789474, 0.39473684, 0.45945946, 0.51351351,
       0.56756757, 0.56756757, 0.67567568, 0.59459459, 0.51351351]), 'train_score': array([0.91343284, 0.91940299, 0.90447761, 0.90178571, 0.9077381 ,
       0.88988095, 0.90178571, 0.91666667, 0.92559524, 0.91369048])}
SVM with C = 50:
{'test_score': array([0.57894737, 0.5       , 0.39473684, 0.54054054, 0.51351351,
       0.51351351, 0.62162162, 0.56756757, 0.54054054, 0.51351351]), 'train_score': array([0.99701493, 0.99402985, 0.99402985, 0.99404762, 0.99702381,
       0.99404762, 0.99404762, 0.99404762, 0.99404762, 0.99404762])}
SVM with C = 100:
{'test_score': array([0.55263158, 0.57894737, 0.42105263, 0.51351351, 0.51351351,
       0.51351351, 0.62162162, 0.54054054, 0.56756757, 0.54054054]), 'train_score': array([1.        , 1.        , 0.99701493, 1.        , 0.99702381,
       1.        , 1.        , 1.        , 1.        , 1.        ])}

Scores for Cropped_2
SVM with C = 1:
{'test_score': array([0.42105263, 0.60526316, 0.60526316, 0.64864865, 0.45945946,
       0.51351351, 0.48648649, 0.48648649, 0.56756757, 0.7027027 ]), 'train_score': array([0.89253731, 0.85074627, 0.86865672, 0.85416667, 0.85416667,
       0.88095238, 0.84821429, 0.89285714, 0.89880952, 0.86607143])}
SVM with C = 50:
{'test_score': array([0.42105263, 0.65789474, 0.65789474, 0.64864865, 0.35135135,
       0.51351351, 0.64864865, 0.51351351, 0.48648649, 0.59459459]), 'train_score': array([0.99701493, 0.99402985, 0.99402985, 0.99404762, 0.99702381,
       0.99404762, 0.99404762, 0.99404762, 0.99404762, 0.99404762])}
SVM with C = 100:
{'test_score': array([0.42105263, 0.65789474, 0.68421053, 0.64864865, 0.40540541,
       0.51351351, 0.64864865, 0.54054054, 0.40540541, 0.54054054]), 'train_score': array([1.        , 1.        , 1.        , 1.        , 0.99702381,
       1.        , 1.        , 1.        , 1.        , 1.        ])}

Scores for Cropped_3
SVM with C = 1:
{'test_score': array([0.57894737, 0.68421053, 0.5       , 0.62162162, 0.43243243,
       0.48648649, 0.48648649, 0.56756757, 0.45945946, 0.67567568]), 'train_score': array([0.91044776, 0.87462687, 0.89850746, 0.91071429, 0.86309524,
       0.90178571, 0.88690476, 0.91071429, 0.88690476, 0.89583333])}
SVM with C = 50:
{'test_score': array([0.47368421, 0.68421053, 0.55263158, 0.56756757, 0.51351351,
       0.51351351, 0.59459459, 0.51351351, 0.67567568, 0.56756757]), 'train_score': array([0.99701493, 0.99402985, 0.99402985, 0.99404762, 0.99702381,
       0.99404762, 0.99404762, 0.99404762, 0.99404762, 0.99404762])}
SVM with C = 100:
{'test_score': array([0.47368421, 0.71052632, 0.57894737, 0.56756757, 0.51351351,
       0.48648649, 0.56756757, 0.51351351, 0.62162162, 0.56756757]), 'train_score': array([0.99701493, 0.99701493, 0.99402985, 0.99702381, 1.        ,
       1.        , 0.99702381, 1.        , 0.99702381, 0.99702381])}

Scores for Cropped_4
SVM with C = 1:
{'test_score': array([0.57894737, 0.5       , 0.57894737, 0.64864865, 0.40540541,
       0.51351351, 0.48648649, 0.64864865, 0.62162162, 0.67567568]), 'train_score': array([0.88358209, 0.89253731, 0.88656716, 0.875     , 0.88988095,
       0.87202381, 0.86011905, 0.875     , 0.88690476, 0.86904762])}
SVM with C = 50:
{'test_score': array([0.42105263, 0.42105263, 0.55263158, 0.72972973, 0.48648649,
       0.56756757, 0.62162162, 0.56756757, 0.62162162, 0.67567568]), 'train_score': array([0.99701493, 0.99402985, 0.99402985, 0.99404762, 0.99702381,
       0.99404762, 0.99404762, 0.99702381, 0.99404762, 0.99404762])}
SVM with C = 100:
{'test_score': array([0.42105263, 0.44736842, 0.55263158, 0.7027027 , 0.48648649,
       0.54054054, 0.62162162, 0.54054054, 0.62162162, 0.7027027 ]), 'train_score': array([0.99701493, 0.99701493, 0.99701493, 0.99702381, 1.        ,
       0.99702381, 0.99702381, 1.        , 0.99702381, 0.99702381])}

Scores for Cropped_5
SVM with C = 1:
{'test_score': array([0.63157895, 0.57894737, 0.52631579, 0.48648649, 0.40540541,
       0.64864865, 0.51351351, 0.64864865, 0.72972973, 0.59459459]), 'train_score': array([0.90447761, 0.89552239, 0.93134328, 0.93452381, 0.92261905,
       0.92261905, 0.91369048, 0.93154762, 0.91666667, 0.93154762])}
SVM with C = 50:
{'test_score': array([0.55263158, 0.52631579, 0.52631579, 0.54054054, 0.48648649,
       0.62162162, 0.56756757, 0.64864865, 0.64864865, 0.62162162]), 'train_score': array([0.99701493, 0.99402985, 0.99402985, 0.99404762, 0.99702381,
       0.99404762, 0.99404762, 0.99702381, 0.99404762, 0.99404762])}
SVM with C = 100:
{'test_score': array([0.55263158, 0.47368421, 0.52631579, 0.54054054, 0.45945946,
       0.62162162, 0.56756757, 0.59459459, 0.56756757, 0.62162162]), 'train_score': array([1.        , 0.99701493, 0.99701493, 0.99702381, 0.99702381,
       0.99702381, 0.99702381, 1.        , 0.99702381, 0.99702381])}

Scores for Cropped_6
SVM with C = 1:
{'test_score': array([0.57894737, 0.60526316, 0.47368421, 0.51351351, 0.43243243,
       0.48648649, 0.56756757, 0.62162162, 0.72972973, 0.64864865]), 'train_score': array([0.90746269, 0.89850746, 0.90447761, 0.9047619 , 0.9047619 ,
       0.89880952, 0.9047619 , 0.9047619 , 0.9047619 , 0.88392857])}
SVM with C = 50:
{'test_score': array([0.55263158, 0.52631579, 0.55263158, 0.54054054, 0.37837838,
       0.45945946, 0.45945946, 0.51351351, 0.67567568, 0.59459459]), 'train_score': array([1.        , 0.99701493, 0.99402985, 0.99702381, 0.99702381,
       0.99702381, 0.99702381, 0.99702381, 0.99702381, 0.99702381])}
SVM with C = 100:
{'test_score': array([0.57894737, 0.5       , 0.52631579, 0.51351351, 0.35135135,
       0.45945946, 0.45945946, 0.51351351, 0.67567568, 0.59459459]), 'train_score': array([1.        , 0.99701493, 0.99701493, 0.99702381, 0.99702381,
       0.99702381, 0.99702381, 0.99702381, 0.99702381, 0.99702381])}

Scores for Cropped_7
SVM with C = 1:
{'test_score': array([0.60526316, 0.60526316, 0.68421053, 0.51351351, 0.56756757,
       0.54054054, 0.72972973, 0.64864865, 0.54054054, 0.62162162]), 'train_score': array([0.87761194, 0.87462687, 0.87462687, 0.86904762, 0.87797619,
       0.86607143, 0.86904762, 0.875     , 0.86607143, 0.88095238])}
SVM with C = 50:
{'test_score': array([0.47368421, 0.65789474, 0.55263158, 0.45945946, 0.48648649,
       0.48648649, 0.62162162, 0.59459459, 0.59459459, 0.62162162]), 'train_score': array([0.99701493, 0.99402985, 0.99402985, 0.99404762, 0.99702381,
       0.99702381, 0.99702381, 0.99702381, 0.99404762, 0.99702381])}
SVM with C = 100:
{'test_score': array([0.5       , 0.63157895, 0.55263158, 0.43243243, 0.51351351,
       0.51351351, 0.59459459, 0.59459459, 0.54054054, 0.56756757]), 'train_score': array([1.        , 0.99701493, 0.99701493, 0.99702381, 0.99702381,
       0.99702381, 0.99702381, 1.        , 0.99702381, 0.99702381])}

Scores for Cropped_8
SVM with C = 1:
{'test_score': array([0.57894737, 0.55263158, 0.52631579, 0.62162162, 0.45945946,
       0.56756757, 0.40540541, 0.54054054, 0.64864865, 0.62162162]), 'train_score': array([0.90447761, 0.89850746, 0.91940299, 0.89880952, 0.89285714,
       0.89285714, 0.86904762, 0.91666667, 0.9047619 , 0.9047619 ])}
SVM with C = 50:
{'test_score': array([0.52631579, 0.44736842, 0.55263158, 0.56756757, 0.48648649,
       0.67567568, 0.54054054, 0.51351351, 0.75675676, 0.56756757]), 'train_score': array([0.99701493, 0.99402985, 0.99402985, 0.99404762, 0.99702381,
       0.99404762, 0.99404762, 0.99404762, 0.99404762, 0.99404762])}
SVM with C = 100:
{'test_score': array([0.5       , 0.44736842, 0.52631579, 0.56756757, 0.48648649,
       0.64864865, 0.54054054, 0.51351351, 0.78378378, 0.51351351]), 'train_score': array([0.99701493, 0.99701493, 0.99701493, 0.99702381, 1.        ,
       0.99702381, 0.99702381, 1.        , 0.99702381, 0.99702381])}

Cropped_8 has the best test score (0.7837837837837838) with C = 100
Scores for Cropped_1_1
SVM with C = 1:
{'test_score': array([0.70588235, 0.5       , 0.67647059, 0.61764706, 0.52941176,
       0.76470588, 0.60606061, 0.66666667, 0.57575758, 0.54545455]), 'train_score': array([0.93377483, 0.92384106, 0.91390728, 0.92715232, 0.92384106,
       0.9205298 , 0.92739274, 0.9339934 , 0.94389439, 0.92079208])}
SVM with C = 50:
{'test_score': array([0.64705882, 0.61764706, 0.70588235, 0.47058824, 0.61764706,
       0.70588235, 0.6969697 , 0.60606061, 0.51515152, 0.57575758]), 'train_score': array([1.        , 0.99668874, 0.99668874, 1.        , 0.99668874,
       0.99668874, 0.99669967, 1.        , 1.        , 0.99669967])}
SVM with C = 100:
{'test_score': array([0.64705882, 0.58823529, 0.67647059, 0.5       , 0.61764706,
       0.70588235, 0.66666667, 0.60606061, 0.51515152, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_2
SVM with C = 1:
{'test_score': array([0.44117647, 0.58823529, 0.47058824, 0.55882353, 0.52941176,
       0.5       , 0.54545455, 0.57575758, 0.42424242, 0.63636364]), 'train_score': array([0.79470199, 0.7781457 , 0.81456954, 0.77483444, 0.78145695,
       0.76490066, 0.81848185, 0.7689769 , 0.82838284, 0.80528053])}
SVM with C = 50:
{'test_score': array([0.35294118, 0.44117647, 0.41176471, 0.55882353, 0.52941176,
       0.52941176, 0.27272727, 0.6969697 , 0.48484848, 0.48484848]), 'train_score': array([0.99668874, 1.        , 0.99668874, 0.99337748, 0.99668874,
       0.99337748, 1.        , 0.99339934, 0.99339934, 0.99339934])}
SVM with C = 100:
{'test_score': array([0.35294118, 0.44117647, 0.41176471, 0.55882353, 0.55882353,
       0.52941176, 0.27272727, 0.72727273, 0.42424242, 0.48484848]), 'train_score': array([1.        , 1.        , 0.99668874, 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ])}

Scores for Cropped_1_3
SVM with C = 1:
{'test_score': array([0.55882353, 0.58823529, 0.52941176, 0.5       , 0.55882353,
       0.55882353, 0.57575758, 0.57575758, 0.51515152, 0.57575758]), 'train_score': array([0.66887417, 0.67880795, 0.67218543, 0.66225166, 0.66887417,
       0.66225166, 0.67656766, 0.66336634, 0.69636964, 0.68316832])}
SVM with C = 50:
{'test_score': array([0.52941176, 0.5       , 0.41176471, 0.47058824, 0.44117647,
       0.52941176, 0.57575758, 0.36363636, 0.3030303 , 0.45454545]), 'train_score': array([0.99668874, 0.99668874, 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 1.        , 0.99669967])}
SVM with C = 100:
{'test_score': array([0.5       , 0.52941176, 0.41176471, 0.47058824, 0.47058824,
       0.55882353, 0.57575758, 0.39393939, 0.3030303 , 0.51515152]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_4
SVM with C = 1:
{'test_score': array([0.52941176, 0.58823529, 0.41176471, 0.55882353, 0.58823529,
       0.61764706, 0.45454545, 0.45454545, 0.48484848, 0.54545455]), 'train_score': array([0.83112583, 0.7781457 , 0.83112583, 0.80463576, 0.81788079,
       0.82781457, 0.84818482, 0.80858086, 0.82178218, 0.80858086])}
SVM with C = 50:
{'test_score': array([0.5       , 0.58823529, 0.44117647, 0.61764706, 0.67647059,
       0.61764706, 0.42424242, 0.60606061, 0.54545455, 0.63636364]), 'train_score': array([0.99668874, 0.99668874, 1.        , 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.52941176, 0.58823529, 0.44117647, 0.58823529, 0.64705882,
       0.61764706, 0.42424242, 0.63636364, 0.54545455, 0.63636364]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Cropped_1_1 has the best test score (0.6188057040998217) with C = 1 and standard error 0.07999281275603276
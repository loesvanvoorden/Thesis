Scores for Cropped_1_1
SVM with C = 1:
{'test_score': array([0.52941176, 0.52941176, 0.52941176, 0.52941176, 0.55882353,
       0.58823529, 0.54545455, 0.57575758, 0.54545455, 0.57575758]), 'train_score': array([0.67218543, 0.64238411, 0.66556291, 0.65231788, 0.64569536,
       0.64569536, 0.65676568, 0.66666667, 0.64686469, 0.6369637 ])}
SVM with C = 50:
{'test_score': array([0.58823529, 0.5       , 0.64705882, 0.55882353, 0.44117647,
       0.47058824, 0.48484848, 0.39393939, 0.45454545, 0.36363636]), 'train_score': array([0.99668874, 0.99668874, 1.        , 1.        , 0.99668874,
       0.99668874, 1.        , 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.55882353, 0.47058824, 0.64705882, 0.5       , 0.44117647,
       0.5       , 0.48484848, 0.42424242, 0.39393939, 0.42424242]), 'train_score': array([1.        , 0.99668874, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 0.99669967])}

Scores for Cropped_1_2
SVM with C = 1:
{'test_score': array([0.5       , 0.5       , 0.58823529, 0.5       , 0.38235294,
       0.67647059, 0.60606061, 0.60606061, 0.60606061, 0.66666667]), 'train_score': array([0.83774834, 0.82119205, 0.82450331, 0.80463576, 0.84437086,
       0.81788079, 0.78217822, 0.80858086, 0.79867987, 0.78877888])}
SVM with C = 50:
{'test_score': array([0.44117647, 0.35294118, 0.55882353, 0.47058824, 0.38235294,
       0.5       , 0.63636364, 0.54545455, 0.51515152, 0.57575758]), 'train_score': array([0.99668874, 0.99668874, 0.99668874, 0.99668874, 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 1.        , 0.99669967])}
SVM with C = 100:
{'test_score': array([0.44117647, 0.35294118, 0.55882353, 0.47058824, 0.41176471,
       0.47058824, 0.60606061, 0.51515152, 0.51515152, 0.54545455]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_3
SVM with C = 1:
{'test_score': array([0.55882353, 0.52941176, 0.52941176, 0.55882353, 0.5       ,
       0.58823529, 0.60606061, 0.60606061, 0.45454545, 0.48484848]), 'train_score': array([0.68211921, 0.67218543, 0.65562914, 0.64900662, 0.69205298,
       0.67880795, 0.68316832, 0.65346535, 0.69306931, 0.7029703 ])}
SVM with C = 50:
{'test_score': array([0.38235294, 0.61764706, 0.61764706, 0.55882353, 0.44117647,
       0.64705882, 0.51515152, 0.42424242, 0.33333333, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}
SVM with C = 100:
{'test_score': array([0.35294118, 0.61764706, 0.61764706, 0.52941176, 0.44117647,
       0.64705882, 0.51515152, 0.45454545, 0.36363636, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_4
SVM with C = 1:
{'test_score': array([0.58823529, 0.47058824, 0.61764706, 0.64705882, 0.61764706,
       0.55882353, 0.63636364, 0.60606061, 0.54545455, 0.54545455]), 'train_score': array([0.94039735, 0.93377483, 0.95033113, 0.93708609, 0.92715232,
       0.93377483, 0.95049505, 0.9339934 , 0.91749175, 0.94059406])}
SVM with C = 50:
{'test_score': array([0.52941176, 0.38235294, 0.58823529, 0.58823529, 0.61764706,
       0.55882353, 0.48484848, 0.51515152, 0.57575758, 0.45454545]), 'train_score': array([1.        , 0.99668874, 0.99668874, 1.        , 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.52941176, 0.38235294, 0.58823529, 0.58823529, 0.58823529,
       0.52941176, 0.48484848, 0.51515152, 0.57575758, 0.42424242]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_5
SVM with C = 1:
{'test_score': array([0.55882353, 0.55882353, 0.55882353, 0.55882353, 0.55882353,
       0.55882353, 0.45454545, 0.54545455, 0.57575758, 0.51515152]), 'train_score': array([0.66556291, 0.65562914, 0.6589404 , 0.69205298, 0.70860927,
       0.70529801, 0.72607261, 0.65016502, 0.6369637 , 0.71947195])}
SVM with C = 50:
{'test_score': array([0.47058824, 0.5       , 0.58823529, 0.52941176, 0.5       ,
       0.35294118, 0.45454545, 0.54545455, 0.63636364, 0.57575758]), 'train_score': array([0.99668874, 0.99668874, 0.99668874, 1.        , 0.99668874,
       0.99668874, 0.99669967, 0.99669967, 0.99669967, 1.        ])}
SVM with C = 100:
{'test_score': array([0.47058824, 0.52941176, 0.61764706, 0.5       , 0.5       ,
       0.35294118, 0.45454545, 0.54545455, 0.66666667, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_6
SVM with C = 1:
{'test_score': array([0.58823529, 0.55882353, 0.5       , 0.58823529, 0.58823529,
       0.52941176, 0.63636364, 0.63636364, 0.57575758, 0.57575758]), 'train_score': array([0.84768212, 0.8410596 , 0.85099338, 0.85761589, 0.86092715,
       0.85099338, 0.88448845, 0.82838284, 0.85808581, 0.8679868 ])}
SVM with C = 50:
{'test_score': array([0.58823529, 0.47058824, 0.41176471, 0.47058824, 0.55882353,
       0.47058824, 0.51515152, 0.57575758, 0.45454545, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}
SVM with C = 100:
{'test_score': array([0.58823529, 0.47058824, 0.41176471, 0.47058824, 0.55882353,
       0.47058824, 0.51515152, 0.57575758, 0.45454545, 0.57575758]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_7
SVM with C = 1:
{'test_score': array([0.52941176, 0.5       , 0.61764706, 0.52941176, 0.58823529,
       0.52941176, 0.51515152, 0.51515152, 0.57575758, 0.57575758]), 'train_score': array([0.78145695, 0.76821192, 0.73509934, 0.8013245 , 0.8013245 ,
       0.75496689, 0.82178218, 0.80858086, 0.75907591, 0.7689769 ])}
SVM with C = 50:
{'test_score': array([0.5       , 0.55882353, 0.55882353, 0.55882353, 0.61764706,
       0.55882353, 0.45454545, 0.51515152, 0.48484848, 0.54545455]), 'train_score': array([1.        , 0.99668874, 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ])}
SVM with C = 100:
{'test_score': array([0.52941176, 0.58823529, 0.55882353, 0.52941176, 0.64705882,
       0.58823529, 0.51515152, 0.51515152, 0.48484848, 0.54545455]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Scores for Cropped_1_8
SVM with C = 1:
{'test_score': array([0.44117647, 0.52941176, 0.55882353, 0.61764706, 0.47058824,
       0.58823529, 0.60606061, 0.66666667, 0.45454545, 0.54545455]), 'train_score': array([0.85430464, 0.83112583, 0.87417219, 0.83443709, 0.8410596 ,
       0.86092715, 0.87458746, 0.85478548, 0.84488449, 0.8679868 ])}
SVM with C = 50:
{'test_score': array([0.47058824, 0.44117647, 0.52941176, 0.58823529, 0.41176471,
       0.47058824, 0.45454545, 0.48484848, 0.60606061, 0.42424242]), 'train_score': array([0.99668874, 0.99668874, 0.99668874, 1.        , 0.99668874,
       1.        , 0.99669967, 0.99669967, 0.99669967, 0.99669967])}
SVM with C = 100:
{'test_score': array([0.5       , 0.47058824, 0.52941176, 0.61764706, 0.38235294,
       0.47058824, 0.51515152, 0.51515152, 0.60606061, 0.39393939]), 'train_score': array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])}

Cropped_1_8 has the best test score (0.5833333333333333) with C = 1 and standard deviation 0.050941501314624237